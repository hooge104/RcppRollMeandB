// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// roll_meandB
NumericMatrix roll_meandB(NumericMatrix x, int windowSize);
RcppExport SEXP _RcppRollMeandB_roll_meandB(SEXP xSEXP, SEXP windowSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type windowSize(windowSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(roll_meandB(x, windowSize));
    return rcpp_result_gen;
END_RCPP
}
// roll_meandB_threshold
NumericMatrix roll_meandB_threshold(NumericMatrix x, int windowRowSize, int windowColSize, double threshold);
RcppExport SEXP _RcppRollMeandB_roll_meandB_threshold(SEXP xSEXP, SEXP windowRowSizeSEXP, SEXP windowColSizeSEXP, SEXP thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type windowRowSize(windowRowSizeSEXP);
    Rcpp::traits::input_parameter< int >::type windowColSize(windowColSizeSEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    rcpp_result_gen = Rcpp::wrap(roll_meandB_threshold(x, windowRowSize, windowColSize, threshold));
    return rcpp_result_gen;
END_RCPP
}
// roll_meandB_vector
NumericVector roll_meandB_vector(NumericVector x, int windowSize);
RcppExport SEXP _RcppRollMeandB_roll_meandB_vector(SEXP xSEXP, SEXP windowSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type windowSize(windowSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(roll_meandB_vector(x, windowSize));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RcppRollMeandB_roll_meandB", (DL_FUNC) &_RcppRollMeandB_roll_meandB, 2},
    {"_RcppRollMeandB_roll_meandB_threshold", (DL_FUNC) &_RcppRollMeandB_roll_meandB_threshold, 4},
    {"_RcppRollMeandB_roll_meandB_vector", (DL_FUNC) &_RcppRollMeandB_roll_meandB_vector, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_RcppRollMeandB(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
